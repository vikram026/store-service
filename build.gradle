import com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
    id 'java'
    id 'com.commercehub.gradle.plugin.avro' version '0.9.1'

}

group 'com.nisum'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven {
        url = 'https://packages.confluent.io/maven/'
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.nisum.App'
    }
}

dependencies{
    implementation 'io.confluent:kafka-avro-serializer:5.4.0'
    implementation('org.apache.spark:spark-sql_2.12:2.4.5') {
        exclude group:'org.slf4j', module: 'slf4j-log4j12'
    }
    implementation 'org.apache.spark:spark-sql-kafka-0-10_2.12:2.4.5'
    implementation 'org.apache.spark:spark-avro_2.12:2.4.5'
    compile group: 'org.codehaus.janino', name: 'janino', version: '3.0.8'
    compile 'org.slf4j:slf4j-api:1.7.24'
    compile 'org.slf4j:slf4j-simple:1.7.24'
    implementation ('com.fasterxml.jackson.core:jackson-databind:2.6.7.3'){
        force = true
    }
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.1.0'
    testCompile group: 'org.awaitility', name: 'awaitility', version: '3.0.0'
    testCompile group: 'org.apache.kafka', name: 'kafka-streams-test-utils', version: '2.5.0'
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.4.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2')
   // testCompile group: 'org.powermock', name: 'powermock-api-mockito', version: '1.7.3'

}



avro {
    createSetters = false
    fieldVisibility = "PRIVATE"
    stringType = "String"
    outputCharacterEncoding = "UTF-8"
}

task generateAvro(type: GenerateAvroJavaTask) {
    source("src/main/resources/avro/")
    outputDir = file("build/generated/java/main")
}

sourceSets {
    main {
        java.srcDirs += generateAvro.outputs
    }

}


test {
    exclude 'com/nisum/integration/'
    useJUnitPlatform()
}